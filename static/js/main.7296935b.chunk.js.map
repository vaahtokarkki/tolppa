{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","withCredentials","api","create","URL","formatMinutes","minutes","Math","floor","App","props","useState","duration","setDuration","delay","setDelay","details","setDetails","message","setMessage","window","localStorage","getItem","token","setToken","intervalActive","setIntervalActive","Date","endDate","setEndDate","endTime","setEndTime","addQuick","setAddQuick","login","setLogin","email","setEmail","password","setPassword","setError","variant","error","fetchDetails","useCallback","a","post","resp","data","reservations","state","licensePlate","temperature","consumption","console","log","response","status","updateToken","callback","savedCallback","useRef","useEffect","current","tick","id","setInterval","clearInterval","useInterval","newToken","setItem","submit","getEndTimeAndDate","eco","toString","deleteTimers","delete","moment","format","add","loginSubmit","cookie","className","Grid","style","maxWidth","width","Alert","severity","Card","CardContent","item","xs","Typography","TextField","label","value","onChange","e","target","type","Button","disabled","color","onClick","CircularProgress","activeTimer","timers","dateFormat","now","find","dateStart","dateEnd","timeStart","timeEnd","start","end","isBefore","isAfter","findActiveTimer","heatedTime","diff","length","renderDetails","List","map","index","momentDateStart","momentDateEnd","chip","isBetween","Chip","size","ListItem","ListItemAvatar","ListItemText","primary","secondary","utils","DateFnsUtils","Fab","InputLabel","htmlFor","Slider","min","max","aria-labelledby","disableToolbar","margin","KeyboardButtonProps","ampm","textAlign","paddingTop","open","removeItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7296935b.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Slider from \"@material-ui/core/Slider\"\nimport Button from \"@material-ui/core/Button\"\nimport Fab from \"@material-ui/core/Fab\"\nimport AccessAlarms from \"@material-ui/icons/AccessAlarms\"\nimport SpeedIcon from \"@material-ui/icons/Speed\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\nimport Chip from \"@material-ui/core/Chip\"\nimport axios from \"axios\"\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\"\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\"\nimport DateFnsUtils from \"@date-io/date-fns\"\nimport Alert from \"@material-ui/lab/Alert\"\nimport InputLabel from \"@material-ui/core/InputLabel\"\nimport TextField from \"@material-ui/core/TextField\"\n\nimport moment from \"moment\"\n\nimport \"./tolppa.css\"\n\naxios.defaults.withCredentials = true\n\nconst api = axios.create()\nconst URL =\n  !process.env.NODE_ENV || process.env.NODE_ENV === \"development\"\n    ? \"http://localhost:1337\"\n    : \"https://tolppa-gateway-nas5m5k7jq-lz.a.run.app\"\n\nconst App = (props) => {\n  const [duration, setDuration] = useState(60)\n  const [delay, setDelay] = useState(0)\n  const [details, setDetails] = useState(null)\n  const [message, setMessage] = useState(null)\n  const [token, setToken] = useState(window.localStorage.getItem(\"token\") || \"\")\n  const [intervalActive, setIntervalActive] = useState(true)\n  const [endDate, setEndDate] = useState(new Date())\n  const [endTime, setEndTime] = useState(new Date())\n  const [addQuick, setAddQuick] = useState(true)\n  const [login, setLogin] = useState(!token)\n  const [email, setEmail] = useState(window.localStorage.getItem(\"email\") || \"\")\n  const [password, setPassword] = useState(\n    window.localStorage.getItem(\"password\") || \"\"\n  )\n\n  const setError = (message) => {\n    setMessage({\n      variant: \"error\",\n      message,\n    })\n    setIntervalActive(false)\n    setDetails({ error: true })\n  }\n\n  const fetchDetails = useCallback(async () => {\n    if (!token) return setLogin(true)\n    try {\n      const resp = await api.post(`${URL}/details`, { token })\n      const {\n        reservations,\n        state,\n        licensePlate,\n        temperature,\n        consumption,\n      } = resp.data\n      setDetails({\n        reservations,\n        state,\n        licensePlate,\n        temperature,\n        consumption,\n      })\n    } catch (e) {\n      console.log(e)\n      // Req blocked\n      if (!e.response) return setError(\"Unknown error!\")\n\n      const status = e.response.status\n      let message\n      switch (status) {\n        case 400:\n          message = \"You need to set token!\"\n          break\n        case 401: {\n          message = \"Login failed\"\n          setLogin(true)\n          updateToken(\"\")\n          break\n        }\n        default:\n          message = \"Unknown error!\"\n          break\n      }\n      setError(message)\n    }\n  }, [token])\n\n  useInterval(fetchDetails, intervalActive ? 5000 : null)\n\n  useEffect(() => {\n    async function a() {\n      fetchDetails()\n    }\n    a()\n  }, [fetchDetails])\n\n  const updateToken = (newToken) => {\n    window.localStorage.setItem(\"token\", newToken)\n    setToken(newToken)\n    setIntervalActive(!!newToken)\n  }\n\n  const submit = async () => {\n    const data = {\n      ...getEndTimeAndDate(),\n      duration,\n      eco: false,\n      token,\n    }\n    try {\n      await api.post(`${URL}/timer`, data)\n      setMessage({\n        variant: \"success\",\n        message: \"Timer sent to gateway successfully!\",\n      })\n      setDuration(60)\n      setDelay(0)\n      setDetails(null)\n      fetchDetails()\n    } catch (e) {\n      setMessage({ variant: \"error\", message: e.toString() })\n    }\n  }\n\n  const deleteTimers = async () => {\n    try {\n      await api.delete(`${URL}/timer`, { data: { token } })\n      setMessage({\n        variant: \"success\",\n        message: \"All timers deleted successfully!\",\n      })\n      fetchDetails()\n    } catch (e) {\n      setMessage({ variant: \"error\", message: e.toString() })\n    }\n  }\n\n  const getEndTimeAndDate = () =>\n    addQuick\n      ? {\n          endDate: moment().format(\"DD.MM.YYYY\"),\n          endTime: moment()\n            .add(delay, \"minutes\")\n            .add(duration, \"minutes\")\n            .format(\"HH:mm\"),\n        }\n      : {\n          endDate: moment(endDate).format(\"DD.MM.YYYY\"),\n          endTime: moment(endTime).format(\"HH:mm\"),\n        }\n\n  const renderMessage = () =>\n    message ? <Alert severity={message.variant}>{message.message}</Alert> : null\n\n  const renderDetails = () => {\n    if (!details)\n      return (\n        <Grid item xs={12} className=\"row\">\n          <Card>\n            <CardContent>\n              <CircularProgress />\n            </CardContent>\n          </Card>\n        </Grid>\n      )\n    if (details.error)\n      return (\n        <Grid item xs={12} className=\"row\">\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\">Tolppa status is unknown</Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      )\n\n    const activeTimer = findActiveTimer(details.reservations || [])\n    const heatedTime = activeTimer\n      ? moment().diff(\n          moment(\n            `${activeTimer.dateStart} ${activeTimer.timeStart}`,\n            \"DD.MM.YYYY HH:mm\"\n          ),\n          \"minutes\"\n        )\n      : 0\n\n    return (\n      <Grid item xs={12} className=\"row\">\n        <Card>\n          <CardContent\n            className={details && details.state ? \"status-on\" : \"status-off\"}\n          >\n            {details && details.state ? (\n              <>\n                <Typography variant=\"h6\">Your tolppa is on!</Typography>\n                <Typography variant=\"body1\">\n                  Car heated for {heatedTime}min! {`${details.consumption}W`}\n                </Typography>\n              </>\n            ) : (\n              <Typography variant=\"h6\">Your tolppa is off!</Typography>\n            )}\n          </CardContent>\n          <CardContent>\n            <Typography variant=\"subtitle1\">{details.licensePlate}</Typography>\n            <Typography variant=\"body1\">\n              {details.temperature}°C, {details.reservations.length}/2 timers\n            </Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n    )\n  }\n\n  const loginSubmit = async () => {\n    try {\n      const { data } = await api.post(`${URL}/login`, { email, password })\n      // The heck ???\n      window.localStorage.setItem(\"email\", email)\n      window.localStorage.setItem(\"password\", password)\n      setLogin(false)\n      updateToken(data.cookie)\n      setMessage(null)\n    } catch (e) {\n      setMessage({ variant: \"error\", message: `Login failed ${e.toString()}` })\n    }\n  }\n\n  const renderLoginForm = () => {\n    return (\n      <Card>\n        <CardContent>\n          <Grid item xs={12} className=\"row\">\n            <Typography variant=\"h6\">Login in to eParking</Typography>\n          </Grid>\n          <Grid item xs={12} className=\"row\">\n            <TextField\n              label=\"Email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <TextField\n              label=\"Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              type=\"password\"\n            />\n          </Grid>\n          <Grid item xs={12} className=\"row\">\n            <Button\n              variant=\"contained\"\n              disabled={!email || !password}\n              color=\"primary\"\n              onClick={loginSubmit}\n            >\n              Login\n            </Button>\n          </Grid>\n        </CardContent>\n      </Card>\n    )\n  }\n\n  const renderReservations = () => {\n    if (!details || !details.reservations || !details.reservations.length)\n      return null\n    return (\n      <Grid item xs={12} className=\"row\">\n        <Card>\n          <List>\n            {details.reservations.map(\n              ({ dateStart, timeStart, timeEnd }, index) => {\n                const momentDateStart = moment(\n                  `${dateStart} ${timeStart}`,\n                  \"DD.MM.YYYY HH:mm\"\n                )\n                const momentDateEnd = moment(\n                  `${dateStart} ${timeEnd}`,\n                  \"DD.MM.YYYY HH:mm\"\n                )\n                const diff = momentDateEnd.diff(momentDateStart, \"minutes\")\n\n                const chip = moment().isBetween(\n                  momentDateStart,\n                  momentDateEnd\n                ) ? (\n                  <Chip\n                    variant=\"outlined\"\n                    className=\"active-timer-chip\"\n                    size=\"small\"\n                    label={`${momentDateEnd.diff(moment(), \"minutes\")}min left`}\n                  />\n                ) : null\n\n                return (\n                  <ListItem key={index}>\n                    <ListItemAvatar>\n                      <PowerSettingsNewIcon />\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={`${dateStart}, ${timeStart}-${timeEnd}`}\n                      secondary={\n                        <>\n                          <span>{`${diff} minutes`}</span>\n                          {chip}\n                        </>\n                      }\n                    />\n                  </ListItem>\n                )\n              }\n            )}\n          </List>\n        </Card>\n      </Grid>\n    )\n  }\n\n  const renderForm = () =>\n    addQuick ? (\n      <>\n        <Grid item xs={12}>\n          <InputLabel htmlFor=\"dur\">{formatMinutes(duration)}</InputLabel>\n          <Slider\n            label=\"Duration\"\n            value={duration}\n            min={15}\n            max={200}\n            onChange={(e, value) => setDuration(value)}\n            aria-labelledby=\"continuous-slider\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <InputLabel htmlFor=\"dur\">Delay {formatMinutes(delay)}</InputLabel>\n          <Slider\n            label=\"Duration\"\n            value={delay}\n            min={0}\n            max={200}\n            onChange={(e, value) => setDelay(value)}\n            aria-labelledby=\"continuous-slider\"\n          />\n        </Grid>\n      </>\n    ) : (\n      <>\n        <Grid item xs={12}>\n          <InputLabel htmlFor=\"dur\">{formatMinutes(duration)}</InputLabel>\n          <Slider\n            label=\"Duration\"\n            value={duration}\n            min={15}\n            max={200}\n            onChange={(e, value) => setDuration(value)}\n            aria-labelledby=\"continuous-slider\"\n          />\n        </Grid>\n        <Grid item xs={12} className=\"form-row\">\n          <KeyboardDatePicker\n            disableToolbar\n            variant=\"inline\"\n            format=\"dd.MM.yyyy\"\n            margin=\"normal\"\n            id=\"date-picker-inline\"\n            label=\"Date for new time\"\n            value={endDate}\n            onChange={setEndDate}\n            KeyboardButtonProps={{\n              \"aria-label\": \"change date\",\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} className=\"form-row\">\n          <KeyboardTimePicker\n            ampm={false}\n            margin=\"normal\"\n            id=\"time-picker\"\n            label=\"When the car should be ready\"\n            value={endTime}\n            onChange={setEndTime}\n            KeyboardButtonProps={{\n              \"aria-label\": \"change time\",\n            }}\n          />\n        </Grid>\n      </>\n    )\n\n  return (\n    <div className=\"container\">\n      <Grid style={{ maxWidth: 300, width: 300 }}>\n        {renderMessage()}\n        {login ? (\n          renderLoginForm()\n        ) : (\n          <>\n            {renderDetails()}\n            {renderReservations()}\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <Grid item xs={12} className=\"row\">\n                <Card>\n                  <CardContent>\n                    <Grid>\n                      <Grid item xs={12} className=\"center\">\n                        <Fab\n                          variant=\"extended\"\n                          color=\"primary\"\n                          onClick={() => setAddQuick(!addQuick)}\n                        >\n                          {addQuick ? (\n                            <>\n                              <AccessAlarms /> Schedule car heating\n                            </>\n                          ) : (\n                            <>\n                              <SpeedIcon /> Add quick timer\n                            </>\n                          )}\n                        </Fab>\n                      </Grid>\n                      {renderForm()}\n\n                      <Grid\n                        item\n                        xs={12}\n                        style={{\n                          textAlign: \"center\",\n                          paddingTop: \"1rem\",\n                        }}\n                      >\n                        <Button\n                          variant=\"contained\"\n                          disabled={!token || (details && details.error)}\n                          color=\"primary\"\n                          onClick={submit}\n                        >\n                          Heat the car\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </CardContent>\n                </Card>\n              </Grid>\n              <Card style={{ textAlign: \"center\" }}>\n                <CardContent className=\"button-card\">\n                  <Button\n                    size=\"large\"\n                    color=\"secondary\"\n                    variant=\"outlined\"\n                    disabled={!token || (details && details.error)}\n                    onClick={deleteTimers}\n                  >\n                    Clear all timers\n                  </Button>\n                  <Button\n                    size=\"large\"\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    onClick={() =>\n                      window.open(\"https://eparking.fi/fi/u#/reservations\")\n                    }\n                  >\n                    Manage reservations!\n                  </Button>\n                  <Button\n                    size=\"large\"\n                    color=\"secondary\"\n                    variant=\"outlined\"\n                    onClick={() => {\n                      setToken(\"\")\n                      setLogin(true)\n                      window.localStorage.removeItem(\"token\")\n                      setIntervalActive(false)\n                    }}\n                  >\n                    Log out\n                  </Button>\n                </CardContent>\n              </Card>\n            </MuiPickersUtilsProvider>\n          </>\n        )}\n      </Grid>\n    </div>\n  )\n}\n\nfunction formatMinutes(minutes) {\n  if (minutes < 60) return `${minutes}min`\n  return `${Math.floor(minutes / 60)}h ${minutes % 60}min`\n}\n\nfunction findActiveTimer(timers) {\n  const dateFormat = \"DD.MM.YYYY HH:mm\"\n  const now = moment()\n  return timers.find(({ dateStart, dateEnd, timeStart, timeEnd }) => {\n    const start = moment(`${dateStart} ${timeStart}`, dateFormat)\n    const end = moment(`${dateEnd} ${timeEnd}`, dateFormat)\n    return start.isBefore(now) && end.isAfter(now)\n  })\n}\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef()\n\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current()\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n  }, [delay])\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}